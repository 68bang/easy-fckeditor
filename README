== Easy FCKEditor Version 0.8.0 (Tested under Rails 2.1.1)

Gaston Ramos
ramos.gaston [at] gmail [dot] com

Easy FCKEditor is a Rails Plugin and a fork of Scott Rutherford great plugin
(script/plugin install svn://rubyforge.org//var/svn/fckeditorp/trunk/fckeditor)
with a EasyUpload plugin  http://martinezdelizarrondo.com/easyupload/ of Alfonso Martínez de Lizarrondo.

This plugin installs the FCKeditor editor into your rails app, along with some helpers to use in your views.

Features
========

   * WYSIWYG text editor.
   * 2 configurable versions of upload images modules (easy and complete).
   * Easy link maker.
   * Easy and Simple version.

Install
=======

If you got this using:

ruby script/plugin install git://github.com/gramos/easy_fckeditor.git

Then the install should of copied all the appropriate files to their homes. If you download a tar then you can either do

rake fckeditor:install

from the root of your app, or the file will be installed the first time you startup after untaring the plugin.

Files
=====

Basically the whole of the FCKeditor suite is copied to: public/javascripts/fckeditor

There is a separate config file copied to: public/javascripts/fckcustom.js, that you can use to customize the install. This file is never overriden by upgrades or reinstalls

IMPORTANT
=========

If you are hosting your rails app in a subdirectory you need to open:

public/javascripts/fckcustom.js

and modify the FCKRelativePath = ''; to suite your needs.

For example if I have an app at www.mydomain.com/app/

then the line should read:

FCKRelativePath = '/app';


Usage
=====

Basically include this in the page you wish to use the editor in

<%= javascript_include_tag :fckeditor %>

Then instead of the normal textarea helper from Rails use this one

<%= fckeditor_textarea("object", "field", :toolbarSet => 'Simple', :width => '100%', :height => '200px') %>

Thats it unless you are using AJAX

AJAX
====

To use a remote form you need to do something like this

<%= form_remote_tag :url => @options.merge(:controller => @scaffold_controller),
                    :before => fckeditor_before_js('note', 'text') %>

    <%= fckeditor_textarea( "note", "text", :ajax => true ) %>

<%= end_form_tag %>

If you forget to put in the :before it won't work, you can also use the fckeditor_form_remote_tag described below

Multiple Editors in a form
==========================

To create a form using multiple editors use the fckeditor_form_remote_tag helper and pass the :editors option. This takes an hash of model symbol keys with each having
an array as its value. The array should contain the list of fields that will have editors attached to them.

<%= fckeditor_form_remote_tag :url => @options.merge(:controller => @scaffold_controller),
                              :editors => { :multinote => ['text1', 'text2'] } %>

    <%= fckeditor_textarea( "multinote", "text1", :ajax => true ) %>
    <%= fckeditor_textarea( "multinote", "text2", :ajax => true ) %>

<%= end_form_tag %>

There is also a fckeditor_remote_form_for version.

Spell Check
===========

Basically ensure you have aspell installed and available in your path. If running on Windows then the expected install path is:

'c:\program files\aspell\bin\aspell'

If you install elsewhere then you will need to update spell_check.rb in the plugin to mirror your path. Also make sure you have this line in your fckcustom.js file:

FCKConfig.SpellChecker = 'SpellerPages';